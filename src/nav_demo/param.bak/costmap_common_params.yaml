#机器人几何参，如果机器人是圆形，设置 robot_radius,如果是其他形状设置 footprint
# robot_radius: 0.5 #圆形
footprint: [[0.2, 0.4], [0.2, -0.4], [-0.6, -0.4], [-0.6, 0.4]]  # if the robot is not circular
# footprint: [[0.32, 0.29], [0.32, -0.29], [-0.32, -0.29], [-0.32, 0.29]]  # if the robot is not circular
obstacle_range: 3 # 用于障碍物探测，比如: 值为 3.0，意味着检测到距离小于 3 米的障碍物时，就会引入代价地图
raytrace_range: 3.1 # 用于清除障碍物，比如：值为 3.5，意味着清除代价地图中 3.5 米以外的障碍物
max_obstacle_height: 2.
# min_obstacle_height: 9.3
#地图类型
map_type: costmap
#导航包所需要的传感器
observation_sources: point_cloud_sensor
#对传感器的坐标系和数据进行配置。这个也会用于代价地图添加和清除障碍物。例如，你可以用激光雷达传感器用于在代价地图添加障碍物，再添加kinect用于导航和清除障碍物。
point_cloud_sensor: {sensor_frame: rslidar, data_type: PointCloud2, topic: /rslidar_points, marking: true, clearing: true}

